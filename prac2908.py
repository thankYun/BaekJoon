# 문제
# 상근이의 동생 상수는 수학을 정말 못한다. 상수는 숫자를 읽는데 문제가 있다. 이렇게 수학을 못하는 상수를 위해서 상근이는 수의 크기를 비교하는 문제를 내주었다. 상근이는 세 자리 수 두 개를 칠판에 써주었다. 그 다음에 크기가 큰 수를 말해보라고 했다.

# 상수는 수를 다른 사람과 다르게 거꾸로 읽는다. 예를 들어, 734와 893을 칠판에 적었다면, 상수는 이 수를 437과 398로 읽는다. 따라서, 상수는 두 수중 큰 수인 437을 큰 수라고 말할 것이다.

# 두 수가 주어졌을 때, 상수의 대답을 출력하는 프로그램을 작성하시오.

# 입력
# 첫째 줄에 상근이가 칠판에 적은 두 수 A와 B가 주어진다. 두 수는 같지 않은 세 자리 수이며, 0이 포함되어 있지 않다.

# 출력
# 첫째 줄에 상수의 대답을 출력한다.

# 우리 싹수를 위해 문제를  풀어보자. 공부하기 싫어서 헛소리를 하는게 분명하다

#list를 이용하면 문자열을 분리할 수 있다.
#A='TEST'
#B=(list(A))  >> print(B) : ['T','E','S','T']


# A_1,B_1=input().split()

A_1= 432
B_1= 567
A=list(str(A_1))
B=list(str(B_1))
#어떻게 하면 역순으로 바꿀 수 있을지 생각하다가 len(A)-i를 반복문의 변수 자리에 사용하기로 결정했다. A[len(A)]가 A 리스트의 가장 마지막 녀석일 것이므로 len(A)-1은 역순이 될 것이라고 생각했다.
A_rev=[] #A 리버스
# print(A)
for i in range(len(A)):
    rev_i=len(A)-i-1            # i가 0부터 시작하기에 세 자리 수는 0, 1, 2 입력이 들어간다 하지만 len(A)-i로 세자리수를 입력하면 3, 2, 1이 입력되기에 -1을 추가해야 한다.
    # print(A[rev_i])
    A_rev1=A[rev_i]
    A_rev.append(A_rev1)
# print (A_rev)
join_A=int(''.join(A_rev)) #문자열을 상수로
# print(join_A)
B_rev=[]
for i in range(len(B)):
    rev_i=len(B)-i-1            # i가 0부터 시작하기에 세 자리 수는 0, 1, 2 입력이 들어간다 하지만 len(A)-i로 세자리수를 입력하면 3, 2, 1이 입력되기에 -1을 추가해야 한다.
    # print(B[rev_i])
    B_rev1=B[rev_i]
    B_rev.append(B_rev1)
# print (A_rev)
join_B=int(''.join(B_rev)) #문자열을 상수로

if join_A>join_B:
    print(join_A)
else:
    print(join_B)

