# 문제
# 땅 위에 달팽이가 있다. 이 달팽이는 높이가 V미터인 나무 막대를 올라갈 것이다.

# 달팽이는 낮에 A미터 올라갈 수 있다. 하지만, 밤에 잠을 자는 동안 B미터 미끄러진다. 또, 정상에 올라간 후에는 미끄러지지 않는다.

# 달팽이가 나무 막대를 모두 올라가려면, 며칠이 걸리는지 구하는 프로그램을 작성하시오.

# 입력
# 첫째 줄에 세 정수 A, B, V가 공백으로 구분되어서 주어진다. (1 ≤ B < A ≤ V ≤ 1,000,000,000)

# 출력
# 첫째 줄에 달팽이가 나무 막대를 모두 올라가는데 며칠이 걸리는지 출력한다.

#하루가 지날 때 마다 A-B만큼 높이가 올라갈 것이다.
#마지막 날에는 도착이므로 B만큼 떨어지지 않을 것이다.
#따라서 V-(A-B)-(A-B)-(A-B)-(A-B)-(A-B)-(A-B)-(A-B)...=<A가 되는 날짜의 다음 날에 달팽이가 도착 할 것이다.
#위의 식을 이항하면 V=<(A-B)+(A-B)+(A-B)+(A-B)+(A-B)+(A-B)+(A-B)+(A-B)+(A-B)...+(A-B)+A인데
#이를 한번 더 이항하면 V-A=<(A-B)+(A-B)+(A-B)+(A-B)+(A-B)+(A-B)+(A-B)...이다.
#즉, 이를 정리하면 V-A를 A-B로 나누었을 때의 몫+1이 달팽이가 도착하는 날짜가 될 것이다. 라고 생각했다.

# 단, V-A<A-B인 경우(몫이 0인 경우 중 일부분이다 사실 B<A<V이기에 그냥 몫이 0이 아닌 경우 해도 될 것 같기도 하다.)에
# 앞서 만든 식이 초기 높이를 낮춘 가정이기에 달팽이쉐끼가 부스트를 써서 1일치 이동 거리와 다음날에 올라갈 거리를 한 번에 올라간 판정이 나온다.
# 얘는 이해하기 어려우니 아래로 내려가자

# 또한 V>A가 정의되어 있기에 무슨 짓을 해도 1일에는 올라갈 수 없다. 그래서 초기값인 2를 넣어보았다.

# 초기 생각이 잘못되었던 이유는 -A 한 것이 하루 할당한 것이기에 + 1, 몫을 이용하기 위해 //를 사용한 경우 (몫은 내림이다.) 정확히 나누어 떨어지지 않으면 그 날이 카운팅되지 않는다.

# 더 자세히 말하자면
# (A-B)라는 값은 무조건 1일을 소모하는 행위이다.
# 하지만 마지막 날 오르는 A는 0<x<A 중 어느 거리를 가더라도 0.0000000000000000001mm를 가더라도 하루가 지난다.
# 우리는 -A를 초기값으로 옮기면서 위의 조건을 잊었다.

# 더 자세히 설명하자
# V < (A-B) + (A-B) +(A-B) +(A-B) +(A-B) +(A-B) + A가 수행되어 7일에 걸쳐 나무를 올랐다.
# 우리는 계산 편의를 위해 V-A < (A-B) +(A-B) +(A-B) +(A-B) +(A-B) +(A-B) 로 변경했다. 그리고 + 1을 넣었다. 
# 이것은 틀렸다. 왜냐하면 마지막 A는 사실 x(0<x<A)였기 때문이다. 마지막 날에 0<v<A-B 인 거리(v)값이 남으면 그 날은 없던 날로 인식된다. 사실은 시간 개념상 무조건 있어야 하는 날이다.
# 즉, 몫이 내림 규칙이 아니라 올림 규칙이었으면 문제 없이 작동했을 문제라는 것이다.
# 
# 이 조건을 없애기 위해 나머지가 0일 때와 아닐 때를 분리했다.
# 나머지가 0일 때는 1만 더하면 된다.
# 하지만 나머지가 0이 아닐 때에는 1에 다시 1을 더해 (2를 더해) 몫의 내림 조건을 올림 조건과 유사하게 만든다.

# 마지막으로 한번 더 설명하자
# 기준일은 4월 1일 오전 00시 이고 4월 3일 새벽 1시가 되었다.
# 오늘은 3일째이다.
# 하지만 49시간 차이가 나고, 하루는 24시간이기에 나누면
# 2일 하고 1시간이 남는다.
# 몫에는 2일밖에 표시되지 않지만, 우리가 바라는 값은 3일째라는 값이다.
# 따라서 + 1이 추가로 필요한 것이다.

# A만큼 이동한 날짜가 입력되었기에 +1이 들어갔고, 올림 방식을 사용하는 날짜의 특성과 내림 방식을 사용하는 몫의 특성이 어우러져 +1이 더 필요하게 되었다고 생각하면 편하다.

A, B, V=map(int,input().split())
if (V-A)%(A-B)==0:
    Day=1+(V-A)//(A-B)       
    print (Day)
else:
    Day=2+(V-A)//(A-B)
    print(Day)

# 솔직히 이거 왜 -1인지 잘 모르겠다. -0.00001을 넣고 싶었는데 틀렸다고 나와서 -1 넣으니 작동했다. int가 들어가 있어서 그런가?
#  - 1 이하의 수를 넣으면 안되는 이유는 V-A-2가 음수가 될 수 있기 때문이다 (V=101, A=100 인 경우 음수가 된다.)
A, B, V=map(int,input().split()) #map을 사용하지 않으면 런타임 오류가 발생하였다.
Day=2+(V-A-1)//(A-B)       #원래는 2+(V-A)//(A-B)
print (Day)